set(CMAKE_SYSTEM_NAME Generic)
set(CMAKE_SYSTEM_PROCESSOR ARM)

if(MINGW OR CYGWIN OR WIN32)
    set(UTIL_SEARCH_COMMAND where)
elseif(UNIX OR APPLE)
    set(UTIL_SEARCH_COMMAND which)
endif()

set(ARCHTUPLE arm-none-eabi-)

execute_process(
    COMMAND ${UTIL_SEARCH_COMMAND} ${ARCHTUPLE}gcc
    OUTPUT_VARIABLE BINUTILS_PATH
    OUTPUT_STRIP_TRAILING_WHITESPACE
)

get_filename_component(ARM_TOOLCHAIN_DIR ${BINUTILS_PATH} DIRECTORY)
set(CMAKE_TRY_COMPILE_TARGET_TYPE STATIC_LIBRARY)

set(CMAKE_C_COMPILER ${ARCHTUPLE}gcc CACHE FILEPATH "C Compiler Path")
set(CMAKE_ASM_COMPILER ${CMAKE_C_COMPILER} CACHE FILEPATH "ASM Compiler Path")
set(CMAKE_CXX_COMPILER ${ARCHTUPLE}g++ CACHE FILEPATH "C++ Compiler Path")

# set(ASM_OPTIONS "-x assembler-with-cpp")

set(MFLAGS "-mcpu=cortex-a9 -mfpu=neon-fp16 -mfloat-abi=softfp -Os -g")
set(CPPFLAGS "-D_POSIX_THREADS -D_UNIX98_THREAD_MUTEX_ATTRIBUTES")
set(GCCFLAGS "-ffunction-sections -fdata-sections -fdiagnostics-color -funwind-tables")
set(WARNFLAGS "${WARNFLAGS} -Wno-psabi")
set(ASMFLAGS "${MFLAGS} ${WARNFLAGS}")

set(CMAKE_C_FLAGS_INIT "${MFLAGS} ${CPPFLAGS} ${WARNFLAGS} ${GCCFLAGS}")
set(CMAKE_CXX_FLAGS_INIT "${MFLAGS} ${CPPFLAGS} ${WARNFLAGS} ${GCCFLAGS}")
set(CMAKE_ASM_FLAGS_INIT "${ASMFLAGS}")
set(CMAKE_EXE_LINKER_FLAGS_INIT "${MFLAGS} ${WARNFLAGS} -nostdlib ${GCCFLAGS}" CACHE INTERNAL "")
# set(CMAKE_EXE_LINKER_FLAGS "--specs=nosys.specs" CACHE INTERNAL "")

set(CMAKE_AR_TOOL ${ARM_TOOLCHAIN_DIR}/${ARCHTUPLE}ar CACHE INTERNAL "ar")
set(CMAKE_OBJCOPY ${ARM_TOOLCHAIN_DIR}/${ARCHTUPLE}objcopy CACHE INTERNAL "objcopy")
set(CMAKE_SIZETOOL ${ARM_TOOLCHAIN_DIR}/${ARCHTUPLE}size CACHE INTERNAL "size")
set(CMAKE_NUMFMT ${ARM_TOOLCHAIN_DIR}/${ARCHTUPLE}numfmt CACHE INTERNAL "numfmt")
set(CMAKE_READELF ${ARM_TOOLCHAIN_DIR}/${ARCHTUPLE} CACHE INTERNAL "readelf")
set(CMAKE_STRIP ${ARM_TOOLCHAIN_DIR}/${ARCHTUPLE}strip CACHE INTERNAL "strip")

# set(CMAKE_SYSROOT ${ARM_TOOLCHAIN_DIR}/../arm-none-eabi)
set(CMAKE_FIND_ROOT_PATH ${BINUTILS_PATH})
set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)